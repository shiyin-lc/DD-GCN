(venv) F:\ChangLi\DDG>python main.py --config config/nturgbd-cross-subject/default.yaml --weights work_dir/ntu60/xsub/runs-43-26918.pt
<class 'model.DDGCN.Model'>
Model(
  (data_bn): BatchNorm1d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (l1): SAGC_SE_ADD(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (down): Sequential(
        (0): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=64, out_features=16, bias=True)
        (qkv): Linear(in_features=16, out_features=48, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=16, out_features=64, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=64, out_features=64, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=64, out_features=64, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_encoder2): STSE_Encoder_part(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=64, out_features=16, bias=True)
        (qkv): Linear(in_features=16, out_features=48, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=16, out_features=64, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=64, out_features=64, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=64, out_features=64, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 64, eps=1e-05, affine=True)
      (conv): Conv2d(64, 64, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
    (se1): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=64, out_features=16, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=16, out_features=64, bias=False)
        (3): Sigmoid()
      )
    )
    (se2): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=64, out_features=16, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=16, out_features=64, bias=False)
        (3): Sigmoid()
      )
    )
  )
  (l2): SAGC_SE_ADD(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=64, out_features=16, bias=True)
        (qkv): Linear(in_features=16, out_features=48, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=16, out_features=64, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=64, out_features=64, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=64, out_features=64, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_encoder2): STSE_Encoder_part(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=64, out_features=16, bias=True)
        (qkv): Linear(in_features=16, out_features=48, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=16, out_features=64, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=64, out_features=64, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=64, out_features=64, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 64, eps=1e-05, affine=True)
      (conv): Conv2d(64, 64, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
    (se1): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=64, out_features=16, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=16, out_features=64, bias=False)
        (3): Sigmoid()
      )
    )
    (se2): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=64, out_features=16, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=16, out_features=64, bias=False)
        (3): Sigmoid()
      )
    )
  )
  (l3): SAGC_SE_ADD(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=64, out_features=16, bias=True)
        (qkv): Linear(in_features=16, out_features=48, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=16, out_features=64, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=64, out_features=64, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=64, out_features=64, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_encoder2): STSE_Encoder_part(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=64, out_features=16, bias=True)
        (qkv): Linear(in_features=16, out_features=48, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=16, out_features=64, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=64, out_features=64, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=64, out_features=64, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 64, eps=1e-05, affine=True)
      (conv): Conv2d(64, 64, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
    (se1): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=64, out_features=16, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=16, out_features=64, bias=False)
        (3): Sigmoid()
      )
    )
    (se2): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=64, out_features=16, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=16, out_features=64, bias=False)
        (3): Sigmoid()
      )
    )
  )
  (l4): SAGC_SE_ADD(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=64, out_features=16, bias=True)
        (qkv): Linear(in_features=16, out_features=48, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=16, out_features=64, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=64, out_features=64, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=64, out_features=64, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_encoder2): STSE_Encoder_part(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=64, out_features=16, bias=True)
        (qkv): Linear(in_features=16, out_features=48, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=16, out_features=64, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=64, out_features=64, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=64, out_features=64, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 64, eps=1e-05, affine=True)
      (conv): Conv2d(64, 64, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
    (se1): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=64, out_features=16, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=16, out_features=64, bias=False)
        (3): Sigmoid()
      )
    )
    (se2): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=64, out_features=16, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=16, out_features=64, bias=False)
        (3): Sigmoid()
      )
    )
  )
  (l5): SAGC_SE_ADD(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (down): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=128, out_features=32, bias=True)
        (qkv): Linear(in_features=32, out_features=96, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=32, out_features=128, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=128, out_features=128, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=128, out_features=128, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_encoder2): STSE_Encoder_part(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=128, out_features=32, bias=True)
        (qkv): Linear(in_features=32, out_features=96, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=32, out_features=128, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=128, out_features=128, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=128, out_features=128, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 128, eps=1e-05, affine=True)
      (conv): Conv2d(128, 128, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
    (se1): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=128, out_features=32, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=32, out_features=128, bias=False)
        (3): Sigmoid()
      )
    )
    (se2): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=128, out_features=32, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=32, out_features=128, bias=False)
        (3): Sigmoid()
      )
    )
  )
  (l6): SAGC_SE_ADD(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=128, out_features=32, bias=True)
        (qkv): Linear(in_features=32, out_features=96, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=32, out_features=128, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=128, out_features=128, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=128, out_features=128, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_encoder2): STSE_Encoder_part(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=128, out_features=32, bias=True)
        (qkv): Linear(in_features=32, out_features=96, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=32, out_features=128, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=128, out_features=128, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=128, out_features=128, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 128, eps=1e-05, affine=True)
      (conv): Conv2d(128, 128, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
    (se1): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=128, out_features=32, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=32, out_features=128, bias=False)
        (3): Sigmoid()
      )
    )
    (se2): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=128, out_features=32, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=32, out_features=128, bias=False)
        (3): Sigmoid()
      )
    )
  )
  (l7): SAGC_SE_ADD(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=128, out_features=32, bias=True)
        (qkv): Linear(in_features=32, out_features=96, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=32, out_features=128, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=128, out_features=128, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=128, out_features=128, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_encoder2): STSE_Encoder_part(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=128, out_features=32, bias=True)
        (qkv): Linear(in_features=32, out_features=96, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=32, out_features=128, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=128, out_features=128, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=128, out_features=128, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 128, eps=1e-05, affine=True)
      (conv): Conv2d(128, 128, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
    (se1): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=128, out_features=32, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=32, out_features=128, bias=False)
        (3): Sigmoid()
      )
    )
    (se2): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=128, out_features=32, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=32, out_features=128, bias=False)
        (3): Sigmoid()
      )
    )
  )
  (l8): SAGC_SE_ADD(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (down): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=256, out_features=64, bias=True)
        (qkv): Linear(in_features=64, out_features=192, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=64, out_features=256, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=256, out_features=256, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=256, out_features=256, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_encoder2): STSE_Encoder_part(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=256, out_features=64, bias=True)
        (qkv): Linear(in_features=64, out_features=192, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=64, out_features=256, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=256, out_features=256, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=256, out_features=256, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 256, eps=1e-05, affine=True)
      (conv): Conv2d(256, 256, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
    (se1): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=256, out_features=64, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=64, out_features=256, bias=False)
        (3): Sigmoid()
      )
    )
    (se2): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=256, out_features=64, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=64, out_features=256, bias=False)
        (3): Sigmoid()
      )
    )
  )
  (l10): SAGC_SE_ADD(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=256, out_features=64, bias=True)
        (qkv): Linear(in_features=64, out_features=192, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=64, out_features=256, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=256, out_features=256, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=256, out_features=256, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_encoder2): STSE_Encoder_part(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=256, out_features=64, bias=True)
        (qkv): Linear(in_features=64, out_features=192, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=64, out_features=256, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=256, out_features=256, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=256, out_features=256, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 256, eps=1e-05, affine=True)
      (conv): Conv2d(256, 256, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
    (se1): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=256, out_features=64, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=64, out_features=256, bias=False)
        (3): Sigmoid()
      )
    )
    (se2): SE_Block(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=256, out_features=64, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=64, out_features=256, bias=False)
        (3): Sigmoid()
      )
    )
  )
  (fc): Linear(in_features=256, out_features=60, bias=True)
)
[ Tue Dec 26 21:57:07 2023 ] Load weights from work_dir/ntu60/xsub/runs-43-26918.pt.
[ Tue Dec 26 21:57:09 2023 ] using warm up, epoch: 0
[ Tue Dec 26 21:57:13 2023 ] Model:   model.DDGCN.Model.
[ Tue Dec 26 21:57:13 2023 ] Weights: work_dir/ntu60/xsub/runs-43-26918.pt.
[ Tue Dec 26 21:57:14 2023 ] Eval epoch: 1
100%|█| 258/258 [01:50<00:00,  2.33it/s]
Accuracy:  0.905986534845636  model:
[ Tue Dec 26 21:59:04 2023 ]    Mean test loss of 258 batches: 0.3427518016492674.
[ Tue Dec 26 21:59:05 2023 ]    Top1: 90.60%
[ Tue Dec 26 21:59:05 2023 ]    Top5: 98.50%
[ Tue Dec 26 21:59:05 2023 ] Done.