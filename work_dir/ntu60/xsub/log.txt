[ Wed Dec 27 11:13:05 2023 ] Load weights from work_dir\ntu60\xsub\ntu60_cs_bone.pt.
[ Wed Dec 27 11:13:07 2023 ] using warm up, epoch: 0
[ Wed Dec 27 12:01:12 2023 ] Load weights from work_dir\ntu60\xsub\ntu60_cs_bone.pt.
[ Wed Dec 27 12:01:14 2023 ] using warm up, epoch: 0


# terminal
(venv) F:\ChangLi\DDG>python main.py --config config/nturgbd-cross-subject/test.yaml --weights work_dir\ntu60\xsub\ntu60_cs_bone.pt
`fused_weight_gradient_mlp_cuda` module not found. gradient accumulation fusion with weight gradient computation disabled.
<class 'model.DDGCN.Model'>
Model(                                                                                       
  (data_bn): BatchNorm1d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (l1): SAGC(                                                                                
    (cagc): CAGC(                                                                            
      (convs): ModuleList(                                                                   
        (0): CTRGC(                                                                          
          (conv1): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))                           
          (conv2): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (down): Sequential(
        (0): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=64, out_features=16, bias=True)
        (qkv): Linear(in_features=16, out_features=48, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=16, out_features=64, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=64, out_features=64, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=64, out_features=64, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 64, eps=1e-05, affine=True)
      (conv): Conv2d(64, 64, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
  )
  (l2): SAGC(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=64, out_features=16, bias=True)
        (qkv): Linear(in_features=16, out_features=48, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=16, out_features=64, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=64, out_features=64, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=64, out_features=64, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 64, eps=1e-05, affine=True)
      (conv): Conv2d(64, 64, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
  )
  (l3): SAGC(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=64, out_features=16, bias=True)
        (qkv): Linear(in_features=16, out_features=48, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=16, out_features=64, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=64, out_features=64, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=64, out_features=64, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 64, eps=1e-05, affine=True)
      (conv): Conv2d(64, 64, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
  )
  (l4): SAGC(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=64, out_features=16, bias=True)
        (qkv): Linear(in_features=16, out_features=48, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=16, out_features=64, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=64, out_features=64, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=64, out_features=64, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 64, eps=1e-05, affine=True)
      (conv): Conv2d(64, 64, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
  )
  (l5): SAGC(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (down): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=128, out_features=32, bias=True)
        (qkv): Linear(in_features=32, out_features=96, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=32, out_features=128, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=128, out_features=128, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=128, out_features=128, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 128, eps=1e-05, affine=True)
      (conv): Conv2d(128, 128, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
  )
  (l6): SAGC(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=128, out_features=32, bias=True)
        (qkv): Linear(in_features=32, out_features=96, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=32, out_features=128, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=128, out_features=128, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=128, out_features=128, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 128, eps=1e-05, affine=True)
      (conv): Conv2d(128, 128, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
  )
  (l7): SAGC(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=128, out_features=32, bias=True)
        (qkv): Linear(in_features=32, out_features=96, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=32, out_features=128, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=128, out_features=128, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=128, out_features=128, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 128, eps=1e-05, affine=True)
      (conv): Conv2d(128, 128, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
  )
  (l8): SAGC(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (down): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=256, out_features=64, bias=True)
        (qkv): Linear(in_features=64, out_features=192, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=64, out_features=256, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=256, out_features=256, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=256, out_features=256, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 256, eps=1e-05, affine=True)
      (conv): Conv2d(256, 256, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
  )
  (l9): SAGC(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=256, out_features=64, bias=True)
        (qkv): Linear(in_features=64, out_features=192, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=64, out_features=256, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=256, out_features=256, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=256, out_features=256, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 256, eps=1e-05, affine=True)
      (conv): Conv2d(256, 256, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
  )
  (l10): SAGC(
    (cagc): CAGC(
      (convs): ModuleList(
        (0): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (1): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (2): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (3): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (4): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
        (5): CTRGC(
          (conv1): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv2): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (conv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          (conv4): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (tanh): Tanh()
        )
      )
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (soft): Softmax(dim=-2)
      (relu): ReLU(inplace=True)
    )
    (stse_encoder): STSE_Encoder(
      (drop_path): Identity()
      (attn): subDDG_Attention(
        (proj1): Linear(in_features=256, out_features=64, bias=True)
        (qkv): Linear(in_features=64, out_features=192, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj2): Linear(in_features=64, out_features=256, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
        (softmax): Softmax(dim=-1)
      )
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (mlp): Mlp(
        (fc1): Linear(in_features=256, out_features=256, bias=True)
        (act): GELU()
        (fc2): Linear(in_features=256, out_features=256, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
      (relu): ReLU()
    )
    (stse_gtc): GTC(
      (bn1): GroupNorm(8, 256, eps=1e-05, affine=True)
      (conv): Conv2d(256, 256, kernel_size=(9, 1), stride=(1, 1), padding=(4, 0), groups=8)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
    (relu): ReLU()
  )
  (fc): Linear(in_features=256, out_features=60, bias=True)
)
[ Wed Dec 27 12:01:12 2023 ] Load weights from work_dir\ntu60\xsub\ntu60_cs_bone.pt.
[ Wed Dec 27 12:01:14 2023 ] using warm up, epoch: 0
[ Wed Dec 27 12:01:19 2023 ] Model:   model.DDGCN.Model.
[ Wed Dec 27 12:01:19 2023 ] Weights: work_dir\ntu60\xsub\ntu60_cs_bone.pt.
[ Wed Dec 27 12:01:19 2023 ] Eval epoch: 1
100%|█| 258/258 [01:40<00:00,  2.58it/s]
Accuracy:  0.9052586886637957  model:  
[ Wed Dec 27 12:02:59 2023 ]    Mean test loss of 258 batches: 0.3506886339493731.
[ Wed Dec 27 12:02:59 2023 ]    Top1: 90.53%
[ Wed Dec 27 12:02:59 2023 ]    Top5: 98.45%
[ Wed Dec 27 12:02:59 2023 ] Done.
